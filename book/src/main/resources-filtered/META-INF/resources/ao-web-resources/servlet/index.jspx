<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-web-resources-servlet - Web resource management in a Servlet environment.
Copyright (C) 2020  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-web-resources-servlet.

ao-web-resources-servlet is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-web-resources-servlet is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-web-resources-servlet.  If not, see <http://www.gnu.org/licenses />.
-->
<jsp:root
	xmlns:ao="https://aoindustries.com/ao-taglib/"
	xmlns:core="https://semanticcms.com/core/taglib/"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:section="https://semanticcms.com/section/taglib/"
	version="2.1"
>
	<jsp:directive.page language="java" pageEncoding="UTF-8" />
	<jsp:directive.page session="false" />
	<core:page
		title="@{documented.name}"
		shortTitle="@{documented.shortTitle}"
		description="@{documented.description}"
		datePublished="2020-03-01T10:52:15-0600"
		dateModified="2020-03-24T14:01:33-05:00"
	>
		<core:child page="changelog.jspx" />
		<core:child page="apidocs/index.jspx" />
		<header>
			<ao:include
				page="/ao-badges/badges.inc.jspx"
				arg.projectStatus="alpha"
				arg.managementStatus="preview"
				arg.packagingStatus="developmental"
				arg.javaseVersion="@{documented.javase.version}"
				arg.javaeeVersion="@{documented.javaee.version}"
				arg.semanticVersioning="2.0.0"
				arg.license="lgpl-3.0"
			/>
		</header>
		<p>
			@{documented.description}
		</p>
		<section:nav label="Project Links">
			<ul>
				<li><core:link page="index.jspx">Project Home</core:link></li>
				<li><core:link page="changelog.jspx">Changelog</core:link></li>
				<li><core:link page="apidocs/index.jspx">API Docs</core:link></li>
				<li><ao:a href="https://search.maven.org/artifact/${ao:encodeURIComponent('@{project.groupId}')}/${ao:encodeURIComponent('@{documented.artifactId}')}">Maven Central Repository</ao:a></li>
				<li><ao:a href="@{project.scm.url}">GitHub</ao:a></li>
			</ul>
		</section:nav>
		<section:section label="TODO">
			<ul>
				<li>Support scripts at end of body?
<pre>https://developers.google.com/speed/docs/insights/mobile#PutStylesBeforeScripts
This would also help by adding scripts actually used by the page
The scripts generated by write(Date|Time|DateTime) "scriptOut" could also be saved for the very end.
Is this still correct with async / deferred / ... scripts now?
AO Taglib: allow queuing of all scripts until end of page
	script src = would be added as-is
	script with body would be written from their queued for
	use body.onload script with a setTimeout?
		https://blog.jamesdbloom.com/JSAndCSSMinificationWithWRO4J.html
		https://eager.io/blog/how-to-decide-when-your-code-should-run/
		https://www.html5rocks.com/en/tutorials/speed/script-loading/
		https://www.danielcrabtree.com/blog/25/gotchas-with-dynamically-adding-script-tags-to-html
	Are we trying to recreate Require.JS here?</pre>
				</li>
				<li>
					Does it make sense to keep track of which resources are required by a specific request,
					instead of including all registered CSS resources?  Can we just put a link tag
					wherever in HTML 5 (which we could use to add on first use)?
					Or, would this require full buffering to put them all in the head?
					With our aggressive one-year cache of CSS files (and other static resources)
					enabled by ao-servlet-last-modified, maybe this is really a non-issue.
				</li>
				<li>
					Should there be a group registry on the current request / session?
					It would let request processing activate groups based on what is actually needed by the page.
				</li>
			</ul>
		</section:section>
	</core:page>
</jsp:root>
